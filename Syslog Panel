conky.config = {
	background = false,
	double_buffer = true,

	alignment = 'top_left',

	border_width = 1,
	cpu_avg_samples = 2,
	default_color = 'white',
	default_outline_color = 'white',
	default_shade_color = 'white',
	draw_borders = false,
	draw_graph_borders = true,
	draw_outline = false,
	draw_shades = false,

	-- gap_x = -1905,
	gap_x = -3275,
	-- gap_x = 10,
	gap_y = 10,
	net_avg_samples = 2,
	no_buffers = true,
	out_to_console = false,
	out_to_stderr = false,
	extra_newline = false,

	own_window = true,
	own_window_type = 'normal',
	own_window_transparent = true,
	own_window_colour = '000000',
	own_window_argb_visual = true,
	own_window_argb_value = 0,
	own_window_hints = 'undecorated,below,sticky,skip_taskbar,skip_pager',

	minimum_width = 10, minimum_height = 20,
	stippled_borders = 0,
	update_interval = 2.0,
	uppercase = false,
	use_spacer = 'none',

	show_graph_scale = false,
	show_graph_range = false,

	use_xft = true,
	xftalpha = 0.1,
	font = 'Droid Sans:size=12',
	
--  Colors are asserted herein so decorations on syslog script emissions can have lower risk of buffer overrun issues
--			  color						 name		syslog widget ui element

	color0 = '#FFFFFF',				-- # white		recent_color, debug_color
	color1 = '#BBBBBB',				-- # ltgray		aging_color
	color2 = '#777777',				-- # dkgray		aged_color
	color3 = '#E196FF',				-- # purple		keyword_color
	color4 = '#00FFFF',				-- # cyan		highlight terms 0, 'heart beat spinner'
	color5 = '#00FF00',				-- # green		highlight terms 1
	color6 = '#FFEA00',				-- # yellow		highlight terms 2
	color7 = '#FF3333',				-- # red		highlight terms 3
	color8 = '#FFA300',				-- # orange		'regular' widget base text
	color9 = '#FF00CD',				-- # magenta	trim_ind_color

--  # optional parameters:
--  # default	details
--	#	0			1) debug enable - Optional int to 0=disabled (default) any other value to enable
--	#	600			2) mark_period - Optional int seconds to self emit in the monitored log - 0 to disable, default is 0
--	#	4			3) log_sever_no - Optional int for log severity number (defaults to 4 [warning] and 'higher' severity)
--	#	60			4) max_entry_count - Optional int for qty of log entries (defaults to 60)
--	#	152			5) max_entry_width - Optional int Max char width to trim each line to (default of 220)
--	#	""			6) keyword_filter 	[REGEX] - Optional case-insentive to filter logs (negate to reject, non-negated to invert rejection)
--	#	""			7) hilt_cyan_list 	[REGEX] - Optional "comma,separated,values" list of keywords to decorate indicated/REGEX terms to specific colors
--	#	""			8) hilt_green_list 	[REGEX] - Optional "comma,separated,values" list of keywords to decorate indicated/REGEX terms to specific colors
--	#	""			9) hilt_yellow_list [REGEX] - Optional "comma,separated,values" list of keywords to decorate indicated/REGEX terms to specific colors
--	#	""			10) hilt_red_list 	[REGEX] - Optional "comma,separated,values" list of keywords to decorate indicated/REGEX terms to specific colors
--	#	30			11) recent_period - Optional int period in Seconds for 'Fresh' decorations to be applied = 
--	#	120			12) aging_period - Optional int period in Seconds for 'Aging' decorations to be applied
--	#	3600		13) temporal fetch - Optional int period in Seconds for pulling in pre-filtered journal and syslog etries

--  after a kill, run this (can ctl-c and it'll stay running):
--  note: but will still echo from conky, if terminal window remains in play

--		cd "$HOME/.conky/MHz_conky_widgets"; conky -c "$HOME/.conky/MHz_conky_widgets/Syslog Panel" &

-- in the logs.sh script, I implemented an 'Include then Exclude' context for log filtering See:
-- https://g.co/gemini/share/5292d2a5062a for initial implementation and alternate implementation concepts

};

conky.text = [[#
# Would like to nice this if possible - need to look at the cpu script and address this accordingly with a sudo
#
# ${execp nice -n -10 ~/.conky/scripts/logs.sh 0 300 7 60 208 "-gnome,-sudo" "todwulff,conky" "debug,info" "notice,warning,warn" "error,err,crit,alert,emerg,panic" 120 300 600}
#
# Explanation of above sample call (ignoring the '...nice -n -10...' portion
# No Debug (0),
# 5 min (300s) MARK interval,
# monitoring debug(7) and higher,
# with a log count of 60 lines to be presented,
# truncated @ 208 chars wide,
# suppressing gnome & sudo log entries,	<-- this imlementation is a Include first then an Exclude on the Included subset
# highlighting those terms provided in cyan, green, yellow, red,
# log entries newer than 120s highlighted as FRESH,
# log entries between 120s & 300s highlighted as AGING,
# log entries older than 300s highlighted as AGED, and
# log entries newer than 600s are retreived and processed (some processes are pretty chatty) and can cause starvation when filtered
#
# for ease of reference:
#
#															   0 emerg
#															   1 alert
#															   2 crit
#															   3 err
#															   4 warning
#															   5 notice
#															   6 info
#															   7 debug  |---------------------------- REGEX SUPPORTED IN THESE FILTER AND HIGHLIGHT FIELDS ----------------------------|
#
${execp ~/.conky/MHz_conky_widgets/conky_scripts/logs.sh 0 600 7 60 152 "-gnome-shell,-sess.*ed,-PWD.*ets" "Conky,Mark" "debug,info" "warning,notice" "error,crit,alert,emerg,panic,err" 120 300 600}
]];
-- useful (for me) filter regex: -gnome-shell,-sess.*ed,-PWD.*ets